clc, clear, close all
% Определение входной структуры
inputStruct = struct(...
    'Re', 10e3, ...      % Значение резистора Re
    'Rbe', 20e3, ...     % Значение резистора Rbe
    'Rb', 10e3, ...      % Значение резистора Rb
    'beta', 100, ...    % Бета (усиление тока биполярного транзистора)
    'f', 50e3, ...      % Частота в герцах
    't', 1e-6, ...      % Временной интервал
    'Us', 12, ...       % Напряжение источника
    'Ube', 0.7 ...      % Напряжение на переходе базы-эмиттера
);

% Вызов функции
params = calculateDirectCircuitParams(inputStruct);

% Вывод результатов
disp(params);


function params = calculateDirectCircuitParams(inputStruct)
Re = inputStruct.Re;
Rbe = inputStruct.Rbe;
Rb = inputStruct.Rb;
beta = inputStruct.beta;
f = inputStruct.f;
t = inputStruct.t;
Us = inputStruct.Us;
Ube = inputStruct.Ube;

    syms ir1 ir2 ir3
    syms ua ub
    syms r1 r2 r3

    syms ir1 ir2 ir3 ua ub r1 r2 r3

% Уравнения
expr1 = ir1 == ir2;
expr2 = 12 == ir1 * r1 + ir2 * r2;
expr3 = -Ube == ir2 * r3 - ir3 * r2;

% Решение системы уравнений
solution = solve([expr1, expr2, expr3], [ir1, ir2, ir3]);
solution_eb=subs(solution,[r1 r2 r3],[Rb Rbe Re]);
sol_double=double(struct2array(solution_eb))
Ub = Rbe*sol_double(2)
Ue = Re*sol_double(3)

Rin_func = Re * beta;

T = 1 / f;
C1 = 100 * T / Rin_func;

    Pb = Ub^2/Rb;
    Pbe = (Us-Ub)^2/Rbe;
    Pe = Ue^2/Re;
Ik = sol_double(3);
    % Создание выходной структуры
    outputStruct = struct('Ue', Ue, ...
                          'Re', Re, ...
                          'Ub', Ub, ...
                          'Rbe', Rbe, ...
                          'Rb', Rb, ...
                          'Rin_func', Rin_func, ...
                          't', t, ...
                          'C1', C1, ...
                          'Pb',Pb,...
                          'Pbe',Pbe,...
                          'Pe',Pe);
    Rb_struct =     struct(...
                    'U', Ub,...
                    'P', Pb,...
                    'R', Rb...
                    );
    Re_struct =     struct(...
                    'U', Ue,...
                    'P', Pe,...
                    'R', Re...
                    );
    Rbe_struct =    struct(...
                    'U', (Us-Ub),...
                    'P', Pbe,...
                    'R', Rbe...
                    );
    C1_struct =     struct(...
                    'U',Ub,...
                    'C', C1...
                    );
    VT_struct =     struct(...
                    'Ube', Ube,...
                    'Uke', Us-Ue,...
                    'Ukb', Us-Ub,...
                    'Pke', Ik*(Us-Ue),...
                    'P',   Ik*(Us-Ue),...
                    'U',   Us-Ue,...
                    'I',   Ik,...
                    't', inputStruct.t...
                    );
    % Создание главной структуры с входными и выходными подструктурами
    params = struct('Input', inputStruct, 'Output', outputStruct, 'Rb', Rb_struct, 'Re', Re_struct, 'Rbe', Rbe_struct, 'C1', C1_struct, 'VT', VT_struct );

end