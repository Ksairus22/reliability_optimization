function params = calculateCircuitParams(inputStruct)
    % Проверьте корректность входных данных
    if ~isfield(inputStruct, 'Us') || ~isfield(inputStruct, 'Ie') || ...
       ~isfield(inputStruct, 'beta') || ~isfield(inputStruct, 'Ube') || ...
       ~isfield(inputStruct, 'f')
        error('Необходимо передать структуру с полями: Us, Ie, beta, Ube и f');
    end

    % Извлечение параметров из входной структуры
    Us = inputStruct.Us;
    Ie = inputStruct.Ie;
    beta = inputStruct.beta;
    Ube = inputStruct.Ube;
    f = inputStruct.f;

    % Вычисления
    Ue = Us / 2;
    Re = Ue / Ie;
    Ik = Ie;
    Ib = Ik / beta + 0.5e-6;
    Idivider = 30 * Ib;
    Ub = Ue + Ube;

    Rbe = Ub / (Idivider-Ib);
    Rb = (Us - Ub) / Idivider;

    Rin_func = Re * beta;
    T = 1 / f;
    C1 = 100 * T / Rin_func;

    Pb = Ub^2/Rb;
    Pbe = (Us-Ub)^2/Rbe;
    Pe = Ue^2/Re;
    % Создание выходной структуры
    outputStruct = struct('Ue', Ue, ...
                          'Re', Re, ...
                          'Ik', Ik, ...
                          'Ib', Ib, ...
                          'Idivider', Idivider, ...
                          'Ub', Ub, ...
                          'Rbe', Rbe, ...
                          'Rb', Rb, ...
                          'Rin_func', Rin_func, ...
                          'T', T, ...
                          'C1', C1, ...
                          'Pb',Pb,...
                          'Pbe',Pbe,...
                          'Pe',Pe);
    Rb_struct =     struct(...
                    'U', Ub,...
                    'P', Pb,...
                    'R', Rb...
                    );
    Re_struct =     struct(...
                    'U', Ue,...
                    'P', Pe,...
                    'R', Re...
                    );
    Rbe_struct =    struct(...
                    'U', (Us-Ub),...
                    'P', Pbe,...
                    'R', Rbe...
                    );
    C1_struct =     struct(...
                    'U',Ub,...
                    'C', C1...
                    );
    VT_struct =     struct(...
                    'Ube', Ube,...
                    'Uke', Us-Ue,...
                    'Ukb', Us-Ub,...
                    'Pke', Ik*(Us-Ue),...
                    'P',   Ik*(Us-Ue),...
                    'U',   Us-Ue,...
                    'I',   Ik,...
                    't', inputStruct.t...
                    );
    % Создание главной структуры с входными и выходными подструктурами
    params = struct('Input', inputStruct, 'Output', outputStruct, 'Rb', Rb_struct, 'Re', Re_struct, 'Rbe', Rbe_struct, 'C1', C1_struct, 'VT', VT_struct );
end
